{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/core/EventManager.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","EventManager","EventManagerContext","eventName","callback","token","subscription","Subscription","this","subscriptionDescriptor","SubscriptionDescriptor","addDescriptor","descriptor","getDescriptor","removeDescriptor","destroy","eventData","subscriptions","forEach","manager","unsubscribe","subscriptionDescriptors","push","getOrCreateEventCollection","find","removeEmptyEvent","hasEvent","length","collection","descriptorIndex","findIndex","splice"],"mappings":"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","file":"event-manager.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const EVENT_LISTENER_SYMBOL_NAME = \"token\";\r\n\r\n/**\r\n * Предоставляет свойства и методы для работы с событиями в контексте менеджера событий.\r\n * @see EventManager\r\n * */\r\nexport default class EventManager\r\n{\r\n    #_context = new EventManagerContext();\r\n\r\n    constructor()\r\n    {\r\n    }\r\n\r\n    subscribe(eventName, callback) \r\n    {\r\n        let token = Symbol(EVENT_LISTENER_SYMBOL_NAME);\r\n        let subscription = new Subscription(this, token);\r\n        let subscriptionDescriptor = new SubscriptionDescriptor(token, callback, eventName, subscription);\r\n\r\n        this.#_context.addDescriptor(subscriptionDescriptor);\r\n\r\n        return subscription;\r\n    }\r\n\r\n    /**\r\n     * Удаляет подписку из менеджера по токену.\r\n     * @param {any} token\r\n     */\r\n    unsubscribe(token)\r\n    {\r\n        let descriptor = this.#_context.getDescriptor(token);\r\n        if (descriptor == null) return;\r\n\r\n        this.#_context.removeDescriptor(descriptor);\r\n\r\n        // Удаление подписки\r\n        descriptor.destroy();\r\n\r\n        return true;\r\n    }\r\n\r\n    dispatch(eventName, eventData)\r\n    {\r\n        if (!this.#_context.subscriptions.hasOwnProperty(eventName)) return false;\r\n\r\n        let lieteners = this.#_context.subscriptions[eventName];\r\n\r\n        lieteners.forEach(descriptor => descriptor.callback(eventData));\r\n\r\n        return true;\r\n    }\r\n\r\n    /** Возвращает новый экземпляр менеджера событий */\r\n    static create() { return new EventManager(); }\r\n}\r\n\r\nexport class Subscription\r\n{\r\n    #_disposed = false;\r\n    #_manager;\r\n    #_token;\r\n\r\n    get isActive() { return !this.#_disposed; }\r\n\r\n    constructor(manager, token)\r\n    {\r\n        this.#_manager = manager;\r\n        this.#_token = token;\r\n    }\r\n\r\n    unsubscribe()\r\n    {\r\n        // Нельзя отписать уже отписавшегося слушателя\r\n        if (this.#_disposed) return false;\r\n\r\n        // Запись результата отписки\r\n        this.#_disposed = this.#_manager.unsubscribe(this.#_token);\r\n\r\n        // Финальная деструктуризация\r\n        if (this.#_disposed) this.#dispose();\r\n\r\n        return this.#_disposed;\r\n    }\r\n\r\n    #dispose()\r\n    {\r\n        this.#_manager = null;\r\n        this.#_token = null;\r\n    }\r\n}\r\n\r\nclass SubscriptionDescriptor\r\n{\r\n    constructor(token, callback, eventName, subscription)\r\n    {\r\n        this.token = token;\r\n        this.subscription = subscription;\r\n        this.callback = callback;\r\n        this.eventName = eventName;\r\n    }\r\n\r\n    destroy()\r\n    {\r\n        this.token = null;\r\n        this.subscription = null;\r\n        this.callback = null;\r\n        this.eventName = null;\r\n    }\r\n}\r\n\r\n/** \r\n * Контекст данных менеджера событий. \r\n * Используется для управления данными менеджера,\r\n * а также предоставляет доступ к своим данным к другим модулям менеджера,\r\n * например, статистике. */\r\nclass EventManagerContext\r\n{\r\n    subscriptionDescriptors = [];\r\n    subscriptions = {};\r\n\r\n    addDescriptor(descriptor)\r\n    {\r\n        this.subscriptionDescriptors.push(descriptor);\r\n        this.getOrCreateEventCollection(descriptor.eventName).push(descriptor);\r\n    }\r\n\r\n    getDescriptor(token)\r\n    {\r\n        return this.subscriptionDescriptors.find(d => d.token == token);\r\n    }\r\n\r\n    getOrCreateEventCollection(eventName)\r\n    {\r\n        return this.subscriptions.hasOwnProperty(eventName)\r\n            ? this.subscriptions[eventName]\r\n            : this.subscriptions[eventName] = [];\r\n    }\r\n\r\n    removeDescriptor(descriptor)\r\n    {\r\n        this.#removeDescriptorFromCollection(this.subscriptionDescriptors, descriptor);\r\n        this.#removeDescriptorFromCollection(this.getOrCreateEventCollection(descriptor.eventName), descriptor);\r\n\r\n        this.removeEmptyEvent(descriptor.eventName);\r\n    }\r\n\r\n    hasEvent(eventName)\r\n    {\r\n        return this.subscriptions.hasOwnProperty(eventName);\r\n    }\r\n\r\n    removeEvent(eventName)\r\n    {\r\n        // Нет события\r\n        if (!this.hasEvent(eventName)) return;\r\n\r\n        // Удаляем без сожаления\r\n        delete this.subscriptions[eventName];\r\n    }\r\n\r\n    removeEmptyEvent(eventName)\r\n    {\r\n        // Нет события\r\n        if (!this.hasEvent(eventName)) return;\r\n\r\n        // Есть живые подписки\r\n        if (this.subscriptions[eventName].length != 0) return;\r\n\r\n        // Удаляем без сожаления\r\n        delete this.subscriptions[eventName];\r\n    }\r\n\r\n    #removeDescriptorFromCollection(collection, descriptor)\r\n    {\r\n        let descriptorIndex = collection.findIndex(d => d == descriptor);\r\n        if (descriptorIndex < 0) return false;\r\n\r\n        return collection.splice(descriptorIndex, 1) == 1;\r\n    }\r\n}","import EventManager from \"./core/EventManager\"\r\nexport { EventManager };"],"sourceRoot":""}